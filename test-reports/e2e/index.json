{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-03T18:56:45.724Z",
    "end": "2020-12-03T18:57:08.701Z",
    "duration": 22977,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4e0f1a4d-b93a-42c9-a173-b6e8de93ee6e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "713e22d1-d750-4818-aa34-95989aca8735",
          "title": "E2E TESTS FOR LOGIN PAGE",
          "fullFile": "C:\\Users\\morga\\Documents\\web\\server-side\\tests\\e2e\\login.js",
          "file": "\\server-side\\tests\\e2e\\login.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "E2E TESTS FOR LOGIN PAGE \"before all\" hook",
              "timedOut": false,
              "duration": 954,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "browser = await puppeteer.launch({\n    headless: false,\n    defaultViewport: null,\n    slowMo: 35,\n    args: [\n        '--window-size=1920,1080',\n    ],\n});",
              "err": {},
              "uuid": "79835159-011a-471f-a938-1b697d2eb1ef",
              "parentUUID": "713e22d1-d750-4818-aa34-95989aca8735",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "E2E TESTS FOR LOGIN PAGE \"before each\" hook",
              "timedOut": false,
              "duration": 1896,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "page = await browser.newPage();\nawait page.goto(\"http://localhost:4200/login\");",
              "err": {},
              "uuid": "4285b9a7-acc9-4620-ad47-60b8fab61d57",
              "parentUUID": "713e22d1-d750-4818-aa34-95989aca8735",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "E2E TESTS FOR LOGIN PAGE \"after all\" hook",
              "timedOut": false,
              "duration": 1263,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await browser.close();",
              "err": {},
              "uuid": "e6663d94-8098-4850-9e8b-ad44ef00dc13",
              "parentUUID": "713e22d1-d750-4818-aa34-95989aca8735",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b08c46cc-6271-4965-84d3-c99d2389ad70",
              "title": "/POST Login",
              "fullFile": "C:\\Users\\morga\\Documents\\web\\server-side\\tests\\e2e\\login.js",
              "file": "\\server-side\\tests\\e2e\\login.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should login a user",
                  "fullTitle": "E2E TESTS FOR LOGIN PAGE /POST Login it should login a user",
                  "timedOut": false,
                  "duration": 4379,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(await page.$eval('#formTitle', e => e.innerText)).to.eql(\"Se connecter Ã  KotsApp\");\n            expect(await page.$eval('#submitBtn', btn => btn.disabled)).eql(true);\n            const pseudo = await page.$('#pseudo');\n            const password = await page.$('#password');\n            const submit = await page.$('#submitBtn');\n            await pseudo.click({clickCount: 3});\n            await pseudo.type('james@gmail.com');\n            await password.click({clickCount: 3});\n            await password.type('toto');\n            expect(await page.$eval('#submitBtn', btn => btn.disabled)).eql(false);\n            await submit.click();\n            await page.waitForNavigation();\n            expect(page.url()).eql('http://localhost:4200/groups');\n            await page.waitFor(1000);\n            const logoutBtnModel = await page.$('#logoutBtnModel');\n            await logoutBtnModel.click();\n            await page.waitForNavigation();\n            expect(page.url()).eql('http://localhost:4200/login');",
                  "err": {},
                  "uuid": "c9e1fcd2-cf23-4f13-a710-d376ef229189",
                  "parentUUID": "b08c46cc-6271-4965-84d3-c99d2389ad70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT login a user with incorrect credentials",
                  "fullTitle": "E2E TESTS FOR LOGIN PAGE /POST Login it should NOT login a user with incorrect credentials",
                  "timedOut": false,
                  "duration": 2824,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const pseudo = await page.$('#pseudo');\n            const password = await page.$('#password');\n            const submit = await page.$('#submitBtn');\n            await pseudo.click({clickCount: 3});\n            await pseudo.type('********');\n            await password.click({clickCount: 3});\n            await password.type('*****');\n            await submit.click();\n            await page.waitFor(1000);\n            expect(await page.$eval('#errorMessage', e => e.innerText)).eql('Authentication failed !');\n            expect(page.url()).eql('http://localhost:4200/login');",
                  "err": {},
                  "uuid": "c7ce8121-987c-4dd1-98b9-f138227d9d5b",
                  "parentUUID": "b08c46cc-6271-4965-84d3-c99d2389ad70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9e1fcd2-cf23-4f13-a710-d376ef229189",
                "c7ce8121-987c-4dd1-98b9-f138227d9d5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7203,
              "root": false,
              "rootEmpty": false,
              "_timeout": 400000
            },
            {
              "uuid": "480a5ce8-0296-4c72-ae78-2e9f4ce6009d",
              "title": "/login form errors",
              "fullFile": "C:\\Users\\morga\\Documents\\web\\server-side\\tests\\e2e\\login.js",
              "file": "\\server-side\\tests\\e2e\\login.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should display form validation on all fields",
                  "fullTitle": "E2E TESTS FOR LOGIN PAGE /login form errors it should display form validation on all fields",
                  "timedOut": false,
                  "duration": 2303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const pseudo = await page.$('#pseudo');\n            const password = await page.$('#password');\n            await pseudo.click({clickCount: 3});\n            await pseudo.type('');\n            await password.click({clickCount: 3});\n            await password.type('');\n            await pseudo.click({clickCount: 3});\n            await page.waitFor(1000);\n            expect((await page.$eval('#pseudo', e => e.className)).includes('is-invalid')).eql(true);\n            expect(await page.$eval('#pseudoError', e => e.innerText)).eql('Ce champ est obligatoire');\n            expect((await page.$eval('#password', e => e.className)).includes('is-invalid')).eql(true);\n            expect(await page.$eval('#passwordError', e => e.innerText)).eql('Un mot de passe est requis');\n            expect(await page.$eval('#submitBtn', btn => btn.disabled)).eql(true);\n            expect(page.url()).eql('http://localhost:4200/login');",
                  "err": {},
                  "uuid": "6e9f96b0-4624-499e-a896-2f4579d466f5",
                  "parentUUID": "480a5ce8-0296-4c72-ae78-2e9f4ce6009d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e9f96b0-4624-499e-a896-2f4579d466f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2303,
              "root": false,
              "rootEmpty": false,
              "_timeout": 400000
            },
            {
              "uuid": "7bfddc29-3c67-4aba-9d64-b363bddb573a",
              "title": "/login nagivate to the signup page",
              "fullFile": "C:\\Users\\morga\\Documents\\web\\server-side\\tests\\e2e\\login.js",
              "file": "\\server-side\\tests\\e2e\\login.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should nagivate to the signup page",
                  "fullTitle": "E2E TESTS FOR LOGIN PAGE /login nagivate to the signup page it should nagivate to the signup page",
                  "timedOut": false,
                  "duration": 748,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const submit = await page.$('#submitBtn');\n            await submit.click();\n            const singUpLink = await page.$('#signUpLink');\n            await singUpLink.click();\n            await page.waitForNavigation();\n            expect(page.url()).eql('http://localhost:4200/register');",
                  "err": {},
                  "uuid": "8d73fdee-2b37-4cc6-8f7e-ba33d42ea041",
                  "parentUUID": "7bfddc29-3c67-4aba-9d64-b363bddb573a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d73fdee-2b37-4cc6-8f7e-ba33d42ea041"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 748,
              "root": false,
              "rootEmpty": false,
              "_timeout": 400000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 400000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 400000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "test-reports/e2e",
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}